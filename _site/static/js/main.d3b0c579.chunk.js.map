{"version":3,"sources":["logo.svg","ReactLifeTimeline.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ReactLifeTimeline","props","state","events","lookup","loaded","today","Date","last_event_date","this","length","got_events","get_events","bind","nextProps","e","date_end","date_start","latest_event","sort","e1","e2","e1ref","event_end_date","e2ref","latest_end","setState","generate_lookup","date","d","getDate","month","getMonth","day","getFullYear","all_weeks","week_start","week_end","print_date","get_events_in_week","ReactTooltip","rebuild","single","ongoing","birthday","subject_name","this_week","color","_events","filter","estart","eend","in_week","single_event","age","bd_in_week","setDate","birthday_color","title","me","subj","verb","push","projected_end","getTime","project_days","fn","end","get_end","cursor","_single","res","future","st","backgroundColor","tips","concat","map","cls","className","key","style","data-tip","join","weeks","start","render_week","place","effect","render_all_weeks","React","Component","defaultProps","SNOW","FROST","AURORA","App","cb","generate_events","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d3b0c579.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nclass ReactLifeTimeline extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: [],\n      lookup: {},\n      loaded: false,\n      today: new Date(),\n      last_event_date: new Date()\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.events.length > 0) this.got_events(this.props.events);\n    else if (this.props.get_events !== null) this.props.get_events(this.got_events.bind(this));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.get_events === null && nextProps.events.length !== this.state.events.length) this.got_events(nextProps.events);\n  }\n\n  event_end_date(e) {\n    if (e.date_end) return new Date(e.date_end)\n    else return new Date(e.date_start);\n  }\n\n  got_events(events) {\n    let last_event_date = new Date();\n    if (events.length > 0) {\n      let latest_event = events.sort((e1, e2) => {\n\tlet e1ref = this.event_end_date(e1);\n\tlet e2ref = this.event_end_date(e2);\n\tif (e2ref > e1ref) return 1;\n\telse if (e2ref < e1ref) return -1;\n\telse return 0;\n      })[0];\n      let latest_end = this.event_end_date(latest_event);\n      if (latest_end > last_event_date) {\n\tlast_event_date = latest_end;\n      }\n    }\n    this.setState({events: events, loaded: true, last_event_date: last_event_date}, () => {\n      this.generate_lookup();\n    });\n  }\n\n  print_date(date) {\n    var d = date.getDate();\n    var month = date.getMonth() + 1;\n    var day = d<10? '0'+d:''+d;\n    if (month < 10) month = '0'+month;\n    return date.getFullYear()+\"-\"+month+\"-\"+day;\n  }\n\n  generate_lookup() {\n    // Generate lookup (event list for each date, by ISO date)\n    let lookup = {};\n    this.all_weeks((week_start, week_end) => {\n      lookup[this.print_date(week_start)] = this.get_events_in_week(week_start, week_end);\n    });\n    this.setState({lookup}, () => {\n      ReactTooltip.rebuild();\n    });\n  }\n\n  single_event(e) {\n    return (e.single || !e.date_end || e.date_start === e.date_end) && (!e.ongoing);\n  }\n\n  get_events_in_week(week_start, week_end) {\n    let {events, today} = this.state;\n    let {birthday, subject_name} = this.props;\n    let this_week = today >= week_start && today <= week_end;\n    let color = null;\n    let single = false; // Has single events\n    let _events = events.filter((e) => {\n      let estart = new Date(e.date_start);\n      let eend = new Date(e.date_end);\n      if (e.ongoing) eend = new Date();\n      let start_in_week = estart >= week_start && estart < week_end;\n      let end_in_week = eend >= week_start && eend < week_end;\n      let event_spans_week = estart <= week_start && eend >= week_end;\n      let in_week = start_in_week || end_in_week || event_spans_week;\n      if (in_week) {\n\tif (e.color) color = e.color;\n\tif (this.single_event(e)) single = true;\n      }\n      return in_week;\n    });\n    if (birthday) {\n      let age = 0;\n      let bd_in_week = false;\n      let week_isos = [];\n      while (week_start < week_end) {\n\tif (week_start.getMonth() === birthday.getMonth() && week_start.getDate() === birthday.getDate()) {\n\t  bd_in_week = true;\n\t  age = week_start.getFullYear() - birthday.getFullYear();\n\t  break;\n\t}\n\tweek_start.setDate(week_start.getDate() + 1);\n      }\n      if (bd_in_week) {\n\tcolor = this.props.birthday_color;\n\tlet me = subject_name === null;\n\tlet title;\n\tlet subj = me ? 'I' : subject_name;\n\tif (age === 0) {\n\t  let verb = me ? 'am' : 'is';\n\t  title = `${subj} ${verb} born!`;\n\t} else {\n\t  let verb = me ? 'turn' : 'turns';\n\t  title = `${subj} ${verb} ${age} on ${birthday.getMonth()+1}/${birthday.getDate()}`;\n\t}\n\t_events.push({title: title, color: color});\n      }\n    }\n    if (this_week) {\n      color = 'white';\n      _events.push({title: 'This week', color: color});\n    }\n    return {\n      events: _events,\n      color: color,\n      single: single\n    };\n  }\n\n  get_end() {\n    let {last_event_date} = this.state;\n    let projected_end = new Date(last_event_date.getTime());\n    projected_end.setDate(projected_end.getDate() + this.props.project_days);\n    return projected_end;\n  }\n\n  all_weeks(fn) {\n    let {birthday} = this.props;\n    let {today} = this.state;\n    let end = this.get_end();\n    let cursor = new Date(birthday.getTime());\n    let weeks = [];\n    while (cursor <= end) {\n      let d = new Date(cursor.getTime());\n      cursor.setDate(cursor.getDate() + 7);\n      fn(d, new Date(cursor.getTime()));\n    }\n  }\n\n  render_week(date_start, date_end) {\n    let date = this.print_date(date_start);\n    let {today} = this.state;\n    let res = this.state.lookup[date];\n    let _single;\n    let events = [];\n    let color;\n    let single = false;\n    if (res != null) {\n      ({events, color, single} = res);\n    }\n    let future = date_start > today;\n    let st = {};\n    if (events.length > 0) st.backgroundColor = color;\n    let tips = [date].concat(events.map((e) => {\n      return e.title;\n    }));\n    let cls = 'week';\n    if (future) cls += ' future';\n    if (single) _single = <span className=\"singleEvents\"></span>;\n    return <div className={cls} key={date} style={st} data-tip={tips.join(', ')}>{_single}</div>;\n  }\n\n  render_all_weeks() {\n    let weeks = [];\n    this.all_weeks((start, end) => {\n      weeks.push(this.render_week(start, end));\n    });\n    return weeks;\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactTooltip place=\"top\" effect=\"solid\" />\n        <div className=\"LifeTimeline\">\n          { this.render_all_weeks() }\n        </div>\n      </div>\n    );\n  }\n}\n\nReactLifeTimeline.defaultProps = {\n  birthday: null,\n  birthday_color: '#F89542',\n  events: [],\n  project_days: (2072-new Date().getFullYear())*365,\n  subject_name: null,\n  get_events: null,\n};\n\nexport default ReactLifeTimeline;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './styles/react-life-timeline.css';\nimport ReactLifeTimeline from './ReactLifeTimeline.js';\n\nconst POLAR = [\n  \"#2E3440\",\n  \"#3B4252\",\n  \"#434C5E\",\n  \"#4C566A\",\n];\nconst SNOW = [\n  \"#D8DEE9\",\n  \"#E5E9F0\",\n  \"#ECEFF4\",\n];\nconst FROST = [\n  \"#8FBCBB\",\n  \"#88C0D0\",\n  \"#81A1C1\",\n  \"#5E81AC\",\n];\nconst AURORA = [\n  \"#BF616A\",\n  \"#D08770\",\n  \"#EBCB8B\",\n  \"#A3BE8C\",\n  \"#B48EAD\",\n];\nconst events = [\n  {\n    date_start: new Date('2006-09-01'),\n    date_end: new Date('2010-06-01'),\n    title: 'SYSU',\n    color: AURORA[1],\n  },\n  {\n    date_start: new Date('2010-07-01'),\n    date_end: new Date('2011-12-07'),\n    title: 'Shenzhen',\n  },\n  {\n    date_start: new Date('2011-12-07'),\n    date_end: new Date('2013-12-01'),\n    title: 'Beijing',\n    color: FROST[1],\n  },\n  {\n    date_start: new Date('2013-12-01'),\n    date_start: new Date('2014-10-01'),\n    title: 'Mianyang',\n  },\n  {\n    date_start: new Date('2014-10-01'),\n    date_end: '2017-10-01',\n    title: 'Beijing again',\n    color: FROST[1],\n  },\n  {\n    date_start: new Date('2017-10-01'),\n    date_end: new Date(),\n    title: 'Amsterdam',\n    color: AURORA[0],\n  },\n];\n\nclass App extends React.Component {\n  generate_events(cb){\n    cb(events);\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <h1>Life by Weeks</h1>\n        <ReactLifeTimeline\n          subject_name=\"Wentao\"\n          birthday={new Date('1987-12-07')}\n          birthday_color={SNOW[0]}\n          get_events={this.generate_events.bind(this)}\n        ></ReactLifeTimeline>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}